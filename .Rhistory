t <- (mu-mu0)/se
pt(t, df=8, lower.tail = TRUE)
?fisher.test
fisher.test( c(3,1),alternative = "one.sided")
matrix(data = c(3,1,1,3), ncol=2)
fisher.test( d,alternative = "one.sided")
d <- matrix(data = c(3,1,1,3), ncol=2)
fisher.test( d,alternative = "one.sided")
d <- matrix(data = c(3,1), ncol=2)
fisher.test( d,alternative = "one.sided")
d <- matrix(data = c(3,1,1,3), ncol=2, dimnames = c("Prefer", "Don't prefer"))
d <- matrix(data = c(3,1,1,3), ncol=2,
dimnames = list(c("Prefer", "Don't prefer"),c("Coke", "Pepsi")))
d
fisher.test(d ,alternative = "greater")
fisher.test(d ,alternative = "less")
fisher.test(d ,alternative = "greater")
?pbinom
pbinom(1, 4, 0.5)
pbinom(2, 4, 0.5)
pbinom(2, 4, 0.5, lower.tail = TRUE)
pbinom(3, 4, 0.5, lower.tail = TRUE)
0.5^4
1-0.5^4
pbinom(3, 4, 0.5, lower.tail = TRUE)
pbinom(2, 4, 0.5, lower.tail = TRUE)
pbinom(2, 4, 0.5, lower.tail = FALSE)
10/1787*100
ppois(1,10/1787*100)
ppois(1,10/1787*100, lower.tail = TRUE)
ppois(1,10/1787*100, lower.tail = FALSE)
0.01*1787
ppois(0.01*1787,10, lower.tail = FALSE)
ppois(1,1.787, lower.tail = FALSE)
ppois(0.01*1787,10, lower.tail = FALSE)
0.01*1787
?ppois
ppois(10, 0.01*1787, lower.tail = FALSE)
ppois(10, 0.01*1787, lower.tail)
ppois(10, 0.01*1787)
qpois(0.01*1787)
qpois(0.05,0.01*1787)
qpois(0.04,0.01*1787)
qpois(0.03,0.01*1787)
ppois(10, lambda*n)
lamda = 0.01
n = 1787
ppois(10, lambda*n)
lambda = 0.01
n = 1787
ppois(10, lambda*n)
n1 <- 9; n2 <- 9;
n1 <- 9; n2 <- 9;
s1 <- 1.5; s2 <- 1.8;
s <- sqrt(s1^2/n1 + s2^2/n) # assuming equal variance in population
n1 <- 9; n2 <- 9;
s1 <- 1.5; s2 <- 1.8;
m1 <- -3; m2 <- 1;
t <- (m1-m2)/s
?dt
pt(t, n1+n2-2)
n1 <- 9; n2 <- 9;
s1 <- 1.5; s2 <- 1.8;
m1 <- -3; m2 <- 1;
s <- sqrt(s1^2/n1 + s2^2/n2)
s <- sqrt(s1^2/n1 + s2^2/n)
s <- sqrt(s1^2/n1 + s2^2/n2)
t <- (m1-m2)/s
pt(t, n1+n2-2)
2*pt(t, n1+n2-2)
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
n <- (qnorm(.95) + qnorm(.9)) ^ 2 * .04 ^ 2 / .01^2
qs <- seq(0.9,0.99,0.01)
qs <- seq(0.9,0.99,0.01)
u1 <- 0.01
u0 <- 0
s  <- 0.04
pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
plot(qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE))
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE))
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
, ylabel="power")
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
, y.lab="power")
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
, ylab="power")
# plot power as function of alpha
plot(1-qs,pnorm(qnorm(qs, mean=u0, sd=s/sqrt(n)), u1, sd=s/sqrt(n), lower.tail = FALSE)
, ylab="power", xlab="alpha")
library(swirl)
swirl()
library(swirl)
swirl()
sum(1:6*1/6)
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace=TRUE)
dim(sam)
resam <- matrix(sam, B, nh)
meds <- apply(resam, 1, mean)
meds <- apply(resam, 1, median)
medain(fh)
median(fh)
median(fh)-median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(0.025, 0.975))
quantile(meds, c(0.025, 0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat()
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count-Cdata$count)
sample(group)
perms <- sapply(1:1000, function(i) testStat(BCcounts, sample(group)))
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms>obs)
testStat(DEcounts, group)
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
library(swirl)
swirl()
all <- lm(data=swiss, Fertility~.)
summary(all)
summary(lm(data=swiss, Fertility~Agriculture))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec<-swiss$Examination+swiss$Catholic
efit <- lm(data=swiss,Fertility~.+ec)
all$coefficients-efit$coefficients
install.packages("GGally")
library(GGally)
rm(list=ls())
data("mtcars")
mtcars$transm <- as.factor(mtcars$am)
levels(mtcars$transm)<-c("Automatic","anual")
mtcars$vs <- as.factor(mtcars$vs)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")
library(ggplot2)
library(GGally)
summary(mtcars)
ggplot(data=mtcars, aes(x=transmission, y=mpg))+geom_boxplot(fill="steel blue")
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_boxplot(fill="steel blue")
mtcars$transm <- as.factor(mtcars$am)
levels(mtcars$transm)<-c("Automatic","Manual")
mtcars$vs <- as.factor(mtcars$vs)
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_boxplot(fill="steel blue")
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_boxplot(fill="steel blue")+facet_grid(.~cyl)
head(mtcars)
manual <- subset(mtcars, transm=="Manual")
automatic <- subset(mtcars, transm=="Automatic")
ggpairs(mtcars, colour="transm", alpha=0.4)
ggpairs(mtcars, colour="transm")
ggpairs(mtcars, -am, colour="transm")
ggpairs(mtcars, -"am", colour="transm")
ggpairs(mtcars[:,-9], colour="transm")
ggpairs(mtcars[,-9], colour="transm")
ggpairs(mtcars[,c(-9,-12)], colour="transm")
ggpairs(mtcars[,c(-9,-12)], colour=mtcars$transm)
ggpairs(mtcars[,c(-9,-12)], colour=mtcars$transm, alpha=0.4)
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_violin(fill="steel blue")
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_violin(fill="transm")+facet_grid(.~cyl)
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_violin(fill=transm)+facet_grid(.~cyl)
head(mtcars)
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_violin(fill="steel blue")+facet_grid(.~cyl)
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_violin(fill=mtcars$transm)+facet_grid(.~cyl)
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_violin(fill="steel blue")+facet_grid(.~cyl)
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_boxplot(fill=transm)+facet_grid(.~cyl)
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_boxplot(fill=transm)
ggplot(data=mtcars, aes(x=transm, y=mpg))+geom_boxplot(fill=mtcars$transm)
mtcars$transm
ggplot(data=mtcars, aes(x=transm, y=mpg, fill=transm))+geom_boxplot()
ggplot(data=mtcars, aes(x=transm, y=mpg, fill=transm))+geom_violin()+facet_grid(.~cyl)
ggplot(data=mtcars, aes(x=transm, y=mpg, fill=transm))+geom_boxplot()+facet_grid(.~cyl)
ggplot(data=mtcars, aes(x=transm, y=mpg, fill=transm))+geom_violin()+facet_grid(.~cyl)
ggplot(data=mtcars, aes(x=transm, y=mpg, fill=transm))+geom_boxplot()+facet_grid(.~cyl)
coeffs<-lm(data=mtcars, mpg~transm+cyl+disp+hp+wt+qsec+vs+gear+carb)$coeff
#largest impact is by weight, second largest by weight
barplot(abs(coeffs[-1]), col="salmon")
abs(coeffs[-1])
ggplot(abs(coeffs[-1]))+geom_bar()
ggplot(abs(coeffs[-1]))+geom_bar(stat="identity")
as.data.frame(abs(coeffs[-1]))
ggplot(as.data.frame(abs(coeffs[-1])))+geom_bar(stat="identity")
as.data.frame(abs(coeffs[-1]))
names(as.data.frame(abs(coeffs[-1])))
row.names(as.data.frame(abs(coeffs[-1])))
ggplot(x=row.names(as.data.frame(abs(coeffs[-1]))),y=as.data.frame(abs(coeffs[-1])))+geom_bar(stat="identity")
ggplot(aes(x=row.names(as.data.frame(abs(coeffs[-1]))),y=as.data.frame(abs(coeffs[-1]))))+geom_bar(stat="identity")
x=row.names(as.data.frame(abs(coeffs[-1])))
y=as.data.frame(abs(coeffs[-1])))
y=as.data.frame(abs(coeffs[-1]))
x
y
y[:,1]
y[,1]
ggplot(aes(x=row.names(as.data.frame(abs(coeffs[-1]))),y=as.data.frame(abs(coeffs[-1]))[,1]))+geom_bar(stat="identity")
rm(list=ls())
swirl()
7
6
dim(InsectSprays)
head(InsectSprays,15)
sC
summary(sc[,2])
summary(sC[,2])
summary(InsectSprays[,2])
sapply(InsectSprays, class)
fit <- lm(data=InsectSprays, count~spray)
summary(fit)
summary(fit)$coef
est<-summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(data=InsectSprays, count~spray-1)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
spray2
fit2 <- lm(data=InsectSprays, count~spray2)
summary(fit2)$coef
mean(sC)
fit$coefficients[3]
(fit$coefficients[3]-fit$coef[2])/1.6011
(fit$coefficients[2]-fit$coef[3])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(data=hunger, Numeric~Year)
summary(fit)$coef
lmF <- lm(data=hunger[hunger$Sex=="Female"], Numeric~Year)
hunger[hunger$Sex=="Female"]
lmF <- lm(data=hunger[,hunger$Sex=="Female"], Numeric~Year)
hunger[,hunger$Sex=="Female"]
hunger[,Sex=="Female"]
head(hunger)
hunger[1,1:2]
lmF <-
| lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric~Year+Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric~Year+Sex+Sex*Year, hunger)
summary(lmInter)
data("mtcars")
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am)<-c("Automatic","Manual")
# motor type as factor
mtcars$vs <- as.factor(mtcars$vs)
levels(mtcars$vs)<-c("V","S")
library(ggplot2)
library(GGally)
library(dplyr)
fit_wt<-lm(mpg~wt, mtcars)
n<-names(mtcars)
wt_cor <- sapply(n[!n=="am" & !n=="wt"], function(x) round(cor(mtcars$wt, as.numeric(mtcars[,x] )),2))
fit_am <- lm(mpg~am, mtcars)
fit_wt<-lm(mpg~wt, mtcars)
fit_wt_am <- lm(mpg~wt*am, mtcars)
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_cyl <- lm(mpg~wt*am+qsec+cyl, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_cyl, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_cyl <- lm(mpg~wt*am+qsec+as.factor(cyl), mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_cyl, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_cyl <- lm(mpg~wt*am+qsec+wt*as.factor(cyl), mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_cyl, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+vs, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+wt*vs, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
n
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+hp, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+drat, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+gear, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+as.factor(gear), mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+wt*as.factor(gear), mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+am*as.factor(gear), mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+am*gear, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+gear, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+gear, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_qsec_vs <- lm(mpg~wt*am+qsec+carb, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_qsec_vs, fit_wt_am_all)
a
summary(fit_wt_am_qsec)$coeff
summary(fit_wt_am_qsec)$coeff[2,1]
summary(fit_wt_am_qsec)$coef
summary(fit_wt_am_qsec)$coef[1,]
summary(fit_wt_am_qsec)$coef[,1]
summary(fit_wt_all)$coef[,1]
summary(fit_wt_am_all)$coef[,1]
models <- data.frame(Model, Intercept, wt, amManual, qsec, wt:amManual)
models <- data.frame("Model", "Intercept", "wt, amManual", "qsec", "wt:amManual")
models
models <- data.frame("Model 3", summary(fit_wt_am_qsec)$coef)
models
models <- data.frame("Model 3", summary(fit_wt_am_qsec)$coef[,1])
models
models <- data.frame("Model 3", t(summary(fit_wt_am_qsec)$coef[,1]))
models
models <- data.frame(c("Model 1","Model 2","Model 3"),
c(t(summary(fit_wt)$coef[,1]), t(summary(fit_wt_am)$coef[,1]), t(summary(fit_wt_am_qsec)$coef[,1])))
c(t(summary(fit_wt)$coef[,1]), t(summary(fit_wt_am)$coef[,1]), t(summary(fit_wt_am_qsec)$coef[,1]))
c((summary(fit_wt)$coef[,1]), (summary(fit_wt_am)$coef[,1]), (summary(fit_wt_am_qsec)$coef[,1]))
rbind((summary(fit_wt)$coef[,1]), (summary(fit_wt_am)$coef[,1]), (summary(fit_wt_am_qsec)$coef[,1]))
summary(fit_wt)$coef[,1]
models <- data.frame(c("Model 1","Model 2","Model 3"),
rbind((summary(fit_wt)$coef[,1]), (summary(fit_wt_am)$coef[,1]), (summary(fit_wt_am_qsec)$coef[,1])))
models
data("mtcars")
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am)<-c("Automatic","Manual")
# motor type as factor
mtcars$vs <- as.factor(mtcars$vs)
levels(mtcars$vs)<-c("V","S")
n<-names(mtcars)
wt_cor <- sapply(n[!n=="am" & !n=="wt"], function(x) round(cor(mtcars$wt, as.numeric(mtcars[,x] )),2))
fit_am <- lm(mpg~am, mtcars)
fit_wt<-lm(mpg~wt, mtcars)
#kable(summary(fit_wt)$coef)
fit_wt_am <- lm(mpg~wt*am, mtcars)
fit_wt_am_qsec <- lm(mpg~wt*am+qsec, mtcars)
fit_wt_am_all <- lm(mpg~wt*am+., mtcars)
a<-anova(fit_wt, fit_wt_am, fit_wt_am_qsec, fit_wt_am_all)
a
plot(fit_wt_am_qsec$fitted.values, fit_wt_am_qsec$residuals)
qplot(fit_wt_am_qsec$fitted.values, fit_wt_am_qsec$residuals)
library(ggplot2)
ggplot(data=fit_wt_am_qsec, aes(x=fitted.values, y=residuals))+geom_point()
ggplot(aes(x=fitted.values, y=residuals))+geom_point()
qplot(x=fitted.values, y=residuals)+geom_point()
qplot(x=fit_wt_am_qsec$fitted.values, y=fit_wt_am_qsec$residuals)+geom_point()
mtcars$fitted <- fit_wt_am_qsec$fitted.values
mtcars$residulas <- fit_wt_am_qsec$residuals
ggplot(data=mtcars, aes(x=fitted, y=residuals))+geom_point()
ggplot(data=mtcars, aes(x=fitted, y=residulas))+geom_point()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color="am"))+geom_point()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=am))+geom_point()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=cyl))+geom_point()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=cyl))+geom_point(size=2)
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=cyl))+geom_point(size=3)
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=gear))+geom_point(size=3)
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=vs))+geom_point(size=3)
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=mpg))+geom_point(size=3)
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=mpg))+geom_point(size=3)+geom_smooth()
names(mtcars)
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=hp))+geom_point(size=3)+geom_smooth()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=drat))+geom_point(size=3)+geom_smooth()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=qsec))+geom_point(size=3)+geom_smooth()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=wt))+geom_point(size=3)+geom_smooth()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=carb))+geom_point(size=3)+geom_smooth()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=as.factor(carb)))+geom_point(size=3)+geom_smooth()
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=as.factor(carb)))+geom_point(size=3)
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=reidulas))+geom_point(size=3)
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=residulas))+geom_point(size=3)
ggplot(data=mtcars, aes(x=fitted, y=residulas, color=vs))+geom_point(size=3)
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
setwd("~/Coursera/MachineLearning")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
head(predictors)
head(diagnosis)
data(concrete)
set.seed(1000)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
head(training)
hist(training$Superplasticizer)
range(training$Superplasticizer)
set.seed(3433)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
head(training)
grep("IL",names(training))
IL <- training(,grep("IL",names(training)))
IL <- training[],grep("IL",names(training))]
IL <- training[,grep("IL",names(training))]
head(IL)
IL <- training[,grep("IL_",names(training))]
head(IL)
IL <- training[,grep("^IL",names(training))]
head(IL)
?preProcess
pc <- preProcess(IL)
pc
summary(pc)
pc <- preProcess(IL, method="PCA")
pc <- preProcess(IL, method="pca")
pc
summary(pcaNNet())
summary(pca)
summary(pc)
pc <- preProcess(IL, method="pca", tresh=80)
pc
pc <- preProcess(IL, method="pca", tresh=0.80)
pc
pc <- preProcess(IL, method="pca", thresh=0.80)
pc
IL$diagnosis <- diagnosis;
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
IL$diagnosis <- diagnosis[ inTrain,];
IL$diagnosis <- diagnosis[ inTrain];
?train
head(IL)
m1<-train(IL[,-13], IL$diagnosis, method="glm", preProcess = "pca")
m2<-train(IL[,-13], IL$diagnosis, method="glm")
library(e1071)
install.packages("e1071")
library(e1071)
m1<-train(IL[,-13], IL$diagnosis, method="glm", preProcess = "pca")
m2<-train(IL[,-13], IL$diagnosis, method="glm")
m1<-train(IL[,-13], IL$diagnosis, method="glm", preProcess(IL, method="pca", thresh=0.80))
m2<-train(IL[,-13], IL$diagnosis, method="glm")
m1<-train(IL[,-13], IL$diagnosis, method="glm", preProcess = "pca", thresh=0.8)
m2<-train(IL[,-13], IL$diagnosis, method="glm")
m1<-train(IL[,-13], IL$diagnosis, method="glm", preProcess = c("pca",thresh=0.8))
m1<-train(IL[,-13], IL$diagnosis, method="glm", preProcess = "pca", thresh=0.80)
ctrl <- trainControl(preProcOptions = list(thresh = 0.80))
m1<-train(IL[,-13], IL$diagnosis, method="glm", preProcess = "pca", trControl = ctrl)
m2<-train(IL[,-13], IL$diagnosis, method="glm")
summary(m1)
summary(m2)
m2
m2$resample
m2
m1
pca<-train(IL[,-13], IL$diagnosis, method="glm", preProcess = "pca", trControl = ctrl)
non_pca<-train(IL[,-13], IL$diagnosis, method="glm")
pca
non_pca
IL[,-13]
?testing
IL_test <- testing[,grep("^IL",names(testing))]
IL_test$prediction = "";
predict(non_pca, IL_test)
p<-predict(non_pca, IL_test)
p
