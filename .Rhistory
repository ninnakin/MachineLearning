fit1 <- lm(data=mtcars, mpg~wt)
summary(fit0)
summary(fit1)
mtcars$mpg-predict(fit0)
sqe0 <- sum((mtcars$mpg-predict(fit0))^2)
sqe1 <- sum((mtcars$mpg-predict(fit1))^2)
summary(fit1)
sqe0/sqe1
fit <- lm(data=mtcars, mpg~I(wt/2))
summary(fit)
37.285+2*3.046
37.285+2*1.878
fit <- lm(data=mtcars, mpg~I(wt/2))
summary(fit)
summary(fit)$coef
summary(fit)$coef[2,]
summary(fit)$coef[2,1]+2*summary(fit)$coef[2,2]
summary(fit)$coef[2,1]-2*summary(fit)$coef[2,2]
# Î²1 from a linear regression model is 0 or not.
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)$coef
# standard deviation.
summary(fit)
data(mtcars)
fit <- lm(data=mtcars, mpg~wt)
wt_avg <- as.data.frame(mean(mtcars$wt))
names(wt_avg) <- 'wt'
plot(mtcars$wt, mtcars$mpg, pch=19, col='grey')
lines(mtcars$wt, predict(fit), lwd=2)
points(wt_avg, predict(fit, wt_avg), pch=19, col='red')
predict(fit, wt_avg, interval="confidence")
wt_new <- as.data.frame(3000/1000)
names(wt_new)<-'wt'
points(wt_new, predict(fit, wt_new), pch=19, col='blue')
predict(fit, wt_new, interval="predict")
load(mtcars)
data(mtcars)
g<-ggplot(data=mtcars,aes(x=weight, y=mpg))+geom_points()
library(ggplot2)
g<-ggplot(data=mtcars,aes(x=weight, y=mpg))+geom_points()
g<-ggplot(data=mtcars,aes(x=weight, y=mpg))+geom_point()
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg))+geom_point()
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=am))+geom_point()
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point()
g
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=2)
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=4)
g
fitall<-lm(mpg~wt, mtcars)
predict(fitall)
summary(fitall)
summary(fitall)$coef
g <- g + geom_abline(intersept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1])
g
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1])
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_points(size=3)
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
fitall<-lm(mpg~wt, mtcars)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=2)
g
fitall<-lm(mpg~wt, mtcars)
fit_a <-lm(mtcars$mpg[mtcars$am==0]~mtcars$wt[mtcars$am==0])
fit_m <-lm(mtcars$mpg[mtcars$am==1]~mtcars$wt[mtcars$am==1])
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_a)$coef[2,1], lwd=1, color=1)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color=0)
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_a)$coef[2,1], lwd=1, color=1)
g
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_a)$coef[2,1], lwd=1, color="salmon")
g
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color"turqoise")
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color"cyan")
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="cyan")
g
mean(mtcars$wt[mtcars$am==0])
mean(mtcars$wt[mtcars$am==1])
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_a)$coef[2,1], lwd=1, color="salmon")
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="cyan")
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==0]))
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==1]))
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_a)$coef[2,1], lwd=1, color="salmon")
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="cyan")
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==0]), color="salmon")
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==1]))
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_a)$coef[2,1], lwd=1, color="salmon")
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="cyan")
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==0]), color="salmon")
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==1]), color="cyan")
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_a)$coef[2,1], lwd=1, color="salmon")
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="cyan")
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==0]), color="salmon")
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==1]), color="cyan")
g <- g + geom_vline(y=mean(mtcars$wt[mtcars$am==0]), color="salmon")
g <- g + geom_vline(y=mean(mtcars$wt[mtcars$am==1]), color="cyan")
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_a)$coef[2,1], lwd=1, color="salmon")
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="cyan")
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==0]), color="salmon")
g <- g + geom_hline(y=mean(mtcars$mpg[mtcars$am==1]), color="cyan")
g <- g + geom_vline(x=mean(mtcars$wt[mtcars$am==0]), color="salmon")
g <- g + geom_vline(x=mean(mtcars$wt[mtcars$am==1]), color="cyan")
g
library(dplyr)
mtcars$am <- as.factor(mtcars$am)
a_cars <- filter(mtcars, am==0)
m_cars <- filter(mtcars, am==1)
fitall<-lm(mpg~wt, mtcars)
fit_a <-lm(mpg~wt, a_cars)
fit_m <-lm(mpg~wt, m_cars)
summary(fitall)
summary(fit_a)
summary(fit_m)
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_a)$coef[2,1], color="salmon")
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fit_m)$coef[2,1], color="cyan")
g <- g + geom_hline(y=mean(a_cars$mpg), color=am)
g <- g + geom_hline(y=mean(m_cars$mpg), color=am)
g <- g + geom_vline(x=mean(a_cars$wt), color=am)
g <- g + geom_vline(x=mean(m_cars$wt), color=am)
g
m_cars
g<-ggplot(data=m_cars,aes(x=wt, y=mpg, color=am))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1)
g
gm<-ggplot(data=m_cars,aes(x=wt, y=mpg, color=am))+geom_point(size=3)
gm <- gm + geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1)
ga<-ggplot(data=a_cars,aes(x=wt, y=mpg, color=am))+geom_point(size=3)
ga <- ga + geom_abline(intercept=summary(fit_a)$coef[1,1], slope=summary(fit_a)$coef[2,1], lwd=1)
gm
ga
gm
ggplot(data=m_cars,aes(x=wt, y=mpg, color="steelblue"))+geom_point(size=3)
ggplot(data=m_cars,aes(x=wt, y=mpg, color="steel blue"))+geom_point(size=3)
ggplot(data=m_cars,aes(x=wt, y=mpg, color="dark blue"))+geom_point(size=3)
ggplot(data=m_cars,aes(x=wt, y=mpg, color="darkblue"))+geom_point(size=3)
ggplot(data=m_cars,aes(x=wt, y=mpg, color="blue"))+geom_point(size=3)
ggplot(data=m_cars,aes(x=wt, y=mpg))+geom_point(size=3, color="blue")
ggplot(data=m_cars,aes(x=wt, y=mpg))+geom_point(size=3, color="steelblue")
geom_points(data=a_cars,aes(x=wt, y=mpg)size=3, color="salmon")
ggplot(data=mtcars,aes(x=wt, y=mpg))+geom_point(size=3, color="steelblue")
geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1)
ggplot(data=mtcars,aes(x=wt, y=mpg))+geom_point(size=3, color="steelblue")
+geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1)
ggplot(data=mtcars,aes(x=wt, y=mpg))+geom_point(size=3, color="steelblue")+geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1)
ggplot(data=mtcars,aes(x=wt, y=mpg))+geom_point(size=3, color="steelblue")+geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="steelblue")
ggplot(data=mtcars,aes(x=wt, y=mpg, col=am))+geom_point(size=3, color=c("steelblue","salmon"))+geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="steelblue")
ggplot(data=mtcars,aes(x=wt, y=mpg, col=am))+geom_point(size=3)+geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="steelblue")
ggplot(data=mtcars,aes(x=wt, y=mpg, col=am))+geom_point(size=3)+geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], lwd=1, color="cyan")
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fit_a)$coef[1,1], slope=summary(fit_a)$coef[2,1], color="salmon")
g <- g + geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], color="cyan")
g <- g + geom_hline(y=mean(a_cars$mpg), color=am)
g <- g + geom_hline(y=mean(m_cars$mpg), color=am)
g <- g + geom_vline(x=mean(a_cars$wt), color=am)
g <- g + geom_vline(x=mean(m_cars$wt), color=am)
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fit_a)$coef[1,1], slope=summary(fit_a)$coef[2,1], color="salmon")
g <- g + geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], color="cyan")
g <- g + geom_hline(y=mean(a_cars$mpg), color="salmon")
g <- g + geom_hline(y=mean(m_cars$mpg), color="cyan")
g <- g + geom_vline(x=mean(a_cars$wt), color="salmon")
g <- g + geom_vline(x=mean(m_cars$wt), color="cyan")
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fit_a)$coef[1,1], slope=summary(fit_a)$coef[2,1], color="salmon")
g <- g + geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], color="turquoise")
g <- g + geom_hline(y=mean(a_cars$mpg), color="salmon")
g <- g + geom_hline(y=mean(m_cars$mpg), color="turquoise")
g <- g + geom_vline(x=mean(a_cars$wt), color="salmon")
g <- g + geom_vline(x=mean(m_cars$wt), color="turquoise")
g
ggplot(data=mtcars, aes(wt))+geom_facet(am)
ggplot(data=mtcars, aes(wt))+facet_grid(am)
ggplot(data=mtcars, aes(wt))+facet_grid(.~am)
ggplot(data=mtcars, aes(wt))+geom_boxplot()+facet_grid(.~am)
ggplot(data=mtcars, aes(x=am,y=wt))+geom_boxplot()
ggplot(data=mtcars, aes(x=am,y=wt, col=am))+geom_boxplot()
ggplot(data=mtcars, aes(x=am,y=wt, fill=am))+geom_boxplot()
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fit_a)$coef[1,1], slope=summary(fit_a)$coef[2,1], color="salmon")
g <- g + geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], color="turquoise")
g <- g + geom_hline(y=mean(a_cars$mpg), color="salmon")
g <- g + geom_hline(y=mean(m_cars$mpg), color="turquoise")
g <- g + geom_vline(x=mean(a_cars$wt), color="salmon")
g <- g + geom_vline(x=mean(m_cars$wt), color="turquoise")
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fit_a)$coef[1,1], slope=summary(fit_a)$coef[2,1], color="salmon")
g <- g + geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], color="turquoise")
#g <- g + geom_hline(y=mean(a_cars$mpg), color="salmon")
#g <- g + geom_hline(y=mean(m_cars$mpg), color="turquoise")
#g <- g + geom_vline(x=mean(a_cars$wt), color="salmon")
#g <- g + geom_vline(x=mean(m_cars$wt), color="turquoise")
g
ggplot(data=mtcars, aes(y=wt, fill=am))+geom_hist()
ggplot(data=mtcars, aes(y=wt, fill=am))+geom_histogram()
ggplot(data=mtcars, aes(x=wt))+geom_histogram()
ggplot(data=mtcars, aes(x=wt))+geom_histogram(color="steelblue")
ggplot(data=mtcars, aes(x=wt))+geom_histogram(fill="steelblue", color="lightblue")
ggplot(data=mtcars, aes(x=wt, col=am))+geom_histogram()
ggplot(data=mtcars, aes(x=wt, fill=am))+geom_histogram()
ggplot(data=mtcars, aes(x=wt, fill=am))+geom_histogram(col=1)
?mtcars
summary(fitall)
summary(fitall)$resi
summary(fitall)$residuals
mtcars$adjusted <-  summary(fitall)$residuals
mtcars
mtcars$mpg_adjusted <-  summary(fitall)$residuals
g<-ggplot(data=mtcars,aes(x=wt, y=mpg_adjusted, color=as.factor(am)))+geom_point(size=3)
g
ggplot(data=mtcars, aes(x=am,y=mpg, fill=am))+geom_boxplot()
ggplot(data=mtcars, aes(x=am,y=mpg_adjusted, fill=am))+geom_boxplot()
library(gridExtra)
g1<-ggplot(data=mtcars, aes(x=am,y=mpg, fill=am))+geom_boxplot()
g2<-ggplot(data=mtcars, aes(x=am,y=mpg_adjusted, fill=am))+geom_boxplot()
grid.arrange(g1, g2, ncol=2)
g1<-ggplot(data=mtcars, aes(x=am,y=mpg, fill=am))+geom_boxplot()+ggtitle("not adjusted for weight")
g2<-ggplot(data=mtcars, aes(x=am,y=mpg_adjusted, fill=am))+geom_boxplot()+ggtitle("adjusted for weight")
grid.arrange(g1, g2, ncol=2)
head(mtcars)
fit<-lm(mpg~cyl+disp+hp+drat+wt+qsec+vs+gear+carb+mpg_adjusted+as.factor(am), mtcars)
summary(fit)
fit<-lm(mpg_adjusted~cyl+disp+hp+drat+wt+qsec+vs+gear+carb+as.factor(am), mtcars)
summary(fit)
fit<-lm(mpg_adjusted~cyl+disp+hp+drat+qsec+vs+gear+carb+as.factor(am), mtcars)
summary(fit)
library(swirl)
swirl()
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
g <- g + geom_abline(intercept=summary(fit_a)$coef[1,1], slope=summary(fit_a)$coef[2,1], color="salmon")
g <- g + geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], color="turquoise")
#g <- g + geom_hline(y=mean(a_cars$mpg), color="salmon")
#g <- g + geom_hline(y=mean(m_cars$mpg), color="turquoise")
#g <- g + geom_vline(x=mean(a_cars$wt), color="salmon")
#g <- g + geom_vline(x=mean(m_cars$wt), color="turquoise")
g
g<-ggplot(data=mtcars,aes(x=wt, y=mpg, color=as.factor(am)))+geom_point(size=3)
g <- g + geom_abline(intercept=summary(fitall)$coef[1,1], slope=summary(fitall)$coef[2,1], lwd=1)
#g <- g + geom_abline(intercept=summary(fit_a)$coef[1,1], slope=summary(fit_a)$coef[2,1], color="salmon")
#g <- g + geom_abline(intercept=summary(fit_m)$coef[1,1], slope=summary(fit_m)$coef[2,1], color="turquoise")
#g <- g + geom_hline(y=mean(a_cars$mpg), color="salmon")
#g <- g + geom_hline(y=mean(m_cars$mpg), color="turquoise")
#g <- g + geom_vline(x=mean(a_cars$wt), color="salmon")
#g <- g + geom_vline(x=mean(m_cars$wt), color="turquoise")
g
fit2<-lm(mpg_adjusted~wt, mtcars)
summary(fit2)
plot(mtcars$drat,mtcars$mpg_adjusted)
plot(mtcars$drat,mtcars$mpg_adjusted, col=mtcars$am)
plot(mtcars$drat,mtcars$mpg_adjusted, col=mtcars$am, pch=19)
fit_new<-lm(mpg_adjusted~. -wt -mpg-adjusted, mtcars)
summary(fit_new)
summary(fitall)
plot(predict(fitall), resid(fitall))
resid(fitall)
dfbetas(fitall)
hatvalue(fitall)
hatvalues(fitall)
round(hatvalues(fitall))
round(hatvalues(fitall),3)
round(dfbetas(fitall),3)
plot(fitall)
plot(fit_new)
swirl()
fit <- lm(y~x, out2)
plot(fit, which=1)
fitno <- lm(y~x, out2[-1,])
plot(fitno, which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1,"y"]-predict(fitno, out2[1,])
1-resid(fit)[1/resno]
1-resid(fit)[1]/resno]
1-resid(fit)[1]/resno
head(hatvalues(fit))
summary(fit)
df.residual(fit))
df.residual(fit)
deviance(fit)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
rstd <- resid(fitno)/(sigma1*sqrt(1-hatvalues(fitno)))
resid(fit)/(sigma1*sqrt(1-hatvalues(fit)))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy<-predict(fitno, out2)-predict(fit, out2)
dy/(2*signma^2)
dy/(2*sigma^2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
swirl(9)
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~. -Examination, swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit2)
anova(fit1, fit3)
deviance(fit3)
d<- deviance(fit3)/43
n<-(deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test((fit3$residuals))
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
rm(list=ls())
data(mtcars)
fit <- lm(mpg~as.factor(cyl)+wt,data=mtcars)
summary(fit)
fit_ad <- lm(mpg~as.factor(cyl)+wt,data=mtcars)
fit_notad <- lm(mpg~as.factor(cyl),data=mtcars)
summary(fit_ad)
summary(fit_notad)
fit_ad <- lm(mpg~as.factor(cyl)+wt,data=mtcars)
fit_int <- lm(mpg~as.factor(cyl)*wt,data=mtcars)
summary(fit_int)
anova(fit_ad,fit_int)
summary(fit_ad)$coef
summary(fit_int)$coef
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
plot(x,y)
summary(fit)$coef
abline(intercept=summary(fit)$coef[1], slope= summary(fit)$coef[2])
ggplot(aes(x=x, y=y))+geom_points()
plot(x, y, pch=19)
predict(fit)
points(predict(fit))
points(x,predict(fit))
plot(x, y, pch=19)
points(x,predict(fit))
plot(x, y, pch=19)
points(x,predict(fit), type="l")
hatvalue(fit)
hatvalues(fit)
dfbetas(fit)
data(mtcars)
fit <- lm(mpg~as.factor(cyl)+wt,data=mtcars)
fit
fit_ad <- lm(mpg~as.factor(cyl)+wt,data=mtcars)
fit_notad <- lm(mpg~as.factor(cyl),data=mtcars)
summary(fit_ad)
summary(fit_notad)
URL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(URL, destfile = "./training.csv", method="curl")
URL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(URL, destfile = "training.csv", method="curl")
URL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(URL,"training.csv", method = "curl")}
download.file(URL,"training.csv", method = "curl")
download.file(URL,"training.csv")
train<- read.csv("training.csv", header = TRUE, na.strings = "")
head(train)
train<- read.csv("training.csv", header = TRUE, na.strings = c("NA","<NA>"))
head(train)
train<- read.csv("training.csv", header = TRUE, na.strings = c("","NA","<NA>"))
head(train)
summary(train)
setwd("~/Coursera/MachineLearning")
training_org<- read.csv("pml-training.csv", header = TRUE, na.strings = c("","NA"))
missing <- apply(training_org, 2, function(x) sum(is.na(x)));
max_miss <- max(missing);
training = training_org[,missing==0];
training<- training[,-grep("timestamp",names(training))]
training<- training[,-grep("window",names(training))]
prc<-prcomp(training[,-c(1,2,55)])
plot(prc$x[,1], prc$x[,2], col=training$classe)
plot(prc$x[,1], prc$x[,2], col=training$user_name)
pc <- as.data.frame(prc$x[,1:2])
ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_point()
library(ggplot2)
ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_point()
ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_jitter()
ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_point()+ facet_grid(. ~ classe)
ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_point()+ facet_grid(. ~ training$classe)
ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_point()+ facet_grid(~ training$classe)
ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_point()+ facet_grid(training$classe)
ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_point()+ facet_grid(training$user_name ~ training$classe)
pc$user_name <- training$user_name;
pc$classe <- training$classe
ggplot(pc, aes(x=PC1, y=PC2, col=classe))+geom_point()+ facet_grid(user_name ~ classe)
ggplot(pc, aes(x=PC1, y=PC2, col=classe))+geom_point()+ facet_grid(. ~ classe)
ggplot(pc, aes(x=PC2, y=PC3, col=classe))+geom_point()+ facet_grid(. ~ classe)
pc <- as.data.frame(prc$x[,1:10])
ggplot(pc, aes(x=PC2, y=PC3, col=classe))+geom_point()+ facet_grid(. ~ classe)
pc$user_name <- training$user_name;
pc$classe <- training$classe
ggplot(pc, aes(x=PC2, y=PC3, col=classe))+geom_point()+ facet_grid(. ~ classe)
ggplot(pc, aes(x=PC3, y=PC4, col=classe))+geom_point()+ facet_grid(. ~ classe)
ggplot(pc, aes(x=PC5, y=PC6, col=classe))+geom_point()+ facet_grid(. ~ classe)
prc<-prcomp(arm)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g1<- ggplot(pc, aes(x=PC1, y=PC2, col=classe))+geom_point()+facet_grid(. ~ classe)
arm<-training[,grep("_arm",names(training))]
forearm<-training[,grep("forearm",names(training))]
dumbbell<-training[,grep("dumbbell",names(training))]
belt<-training[,grep("belt",names(training))]
prc<-prcomp(arm)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g1<- ggplot(pc, aes(x=PC1, y=PC2, col=classe))+geom_point()+facet_grid(. ~ classe)
prc<-prcomp(belt)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g4 <- ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_point()+facet_grid(. ~ classe)
g4
g3
g1
g4
ggplot(pc, aes(x=PC1, y=PC2, col=training$classe))+geom_point()+facet_grid(. ~ user_name)
ggplot(pc, aes(x=PC1, y=PC2, col=training$user_name))+geom_point()+facet_grid(. ~ classe)
prc<-prcomp(arm)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g1<- ggplot(pc, aes(x=PC1, y=PC2, col=user_name))+geom_point()+facet_grid(. ~ classe)
prc<-prcomp(forearm)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g2 <- ggplot(pc, aes(x=PC1, y=PC2, col=user_name))+geom_point()+facet_grid(. ~ classe)
prc<-prcomp(dumbbell)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g3 <- ggplot(pc, aes(x=PC1, y=PC2, col=user_name))+geom_point()+facet_grid(. ~ classe)
prc<-prcomp(belt)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g4 <- ggplot(pc, aes(x=PC1, y=PC2, col=user_name))+geom_point()+facet_grid(. ~ classe)
grid.arrange(g1, g2, g3, g4, nrow=2)
library(gridExtra)
prc<-prcomp(arm)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g1<- ggplot(pc, aes(x=PC1, y=PC2, col=user_name))+geom_point()+facet_grid(. ~ classe)
prc<-prcomp(forearm)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g2 <- ggplot(pc, aes(x=PC1, y=PC2, col=user_name))+geom_point()+facet_grid(. ~ classe)
prc<-prcomp(dumbbell)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g3 <- ggplot(pc, aes(x=PC1, y=PC2, col=user_name))+geom_point()+facet_grid(. ~ classe)
prc<-prcomp(belt)
pc <- as.data.frame(prc$x[,1:2])
pc$user_name <- training$user_name;
pc$classe <- training$classe
g4 <- ggplot(pc, aes(x=PC1, y=PC2, col=user_name))+geom_point()+facet_grid(. ~ classe)
grid.arrange(g1, g2, g3, g4, nrow=2)
names(training)
cor(training$roll_belt, training$pitch_belt)
cor(training$roll_belt, training$yaw_belt)
cor(training$roll_belt, training$total_accel_belt)
cor(training$roll_belt, training$gyros_belt_x)
cor(training$roll_belt, training$gyros_belt_y)
cor(training$roll_belt, training$gyros_belt_z)
